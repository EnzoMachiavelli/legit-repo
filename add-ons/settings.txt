automacro SetRodexReceiver {
    priority 0
	exclusive 1
    timeout 10
    overrideAI 1
    CheckOnAI auto, manual, off
    ConfigKeyNotExist rodexReceiver
    call {
        $wantedkey = $.ConfigKeyNotExistLastKey
        $keyValue = &random ("","")
        call AddNewKey
    }
}

automacro SetJobClass {
    priority 1
	exclusive 1
    timeout 10
    overrideAI 1
    CheckOnAI auto, manual, off
    ConfigKeyNotExist jobClass
    call {
        $wantedkey = $.ConfigKeyNotExistLastKey
        $keyValue = $.job
        call AddNewKey
    }
}

automacro SetBuildType {
    priority 2
	exclusive 1
    timeout 10
    overrideAI 1
    CheckOnAI auto, manual, off
    ConfigKeyNotExist buildType
    call {
        $wantedkey = $.ConfigKeyNotExistLastKey
        $keyValue = none
        call AddNewKey
	}
}

macro AddNewKey {
	log There is a missing key in config.txt
	log The key is $wantedkey
	log The wanted value for it is $keyValue
	add_new_key("$wantedkey","$keyValue")
}

sub add_new_key {
    my ($key, $value) = @_;
    configModify($key, $value);
}

#_____________________________________________________________________
#
# Commands
#_____________________________________________________________________

macro setStorage {
	[	
		do conf saveMap prt_fild05
		do conf storageAuto $storageOption
		do conf storageAuto_npc prt_fild05 290 224
		do conf storageAuto_npc_steps c r1 n
		do conf autoMoveOnDeath 1
		do conf autoMoveOnDeath_x &rand(260,280)
		do conf autoMoveOnDeath_y &rand(200,220)
		do conf autoMoveOnDeath_map prt_fild05
	]
	[
		do conf sellAuto $sellOption
		do conf sellAuto_npc prt_fild05 290 221 
	]
}

macro setConfig {
	[
		do conf -f killSteal 1
		do conf pauseCharServer &rand(1,2)
		do conf pauseMapServer &rand(1,2)
		do conf allowedMaps none
		do conf allowedMaps_reaction 0
		do conf attackAuto_inLockOnly 2
		do conf dcOnServerClose 1
		do conf dcOnServerShutDown 1
		do conf partyAuto 2
		do conf partyAutoShare 1
		do conf partyAutoShareItem 1
		do conf partyAutoShareItemDiv 1
		do conf showDomain 0
		do conf squelchDomains ai_attack, attacked, attackedMiss, console, skill, selfSkill, exp, attackMon, attackMonMiss, drop, teleport, useTeleport, emotion, info, list
		do conf verbose 0
		do conf verboseDomains none
		do conf logDead 0
		do conf logConsole 0
		do conf sleepTime 150000			
	]
}

macro setStats {
	$currentJob = $.job	
	if ($currentJob == Acolyte) {
		[
			do conf statsAddAuto 1
			do conf statsAddAuto_list 20 agi, 20 str, 20 dex, 10 int, 40 agi, 30 str, 40 dex, 30 vit, 30 int, 60 str, 80 agi
			do conf statsAddAuto_dontUseBonus 1
			do conf statsAdd_over_99 1
			
			do conf skillsAddAuto 1
			do conf skillsAddAuto_list AL_HEAL 5, AL_INCAGI 5, AL_DP 5, AL_BLESSING 10, AL_INCAGI 10, AL_RUWACH 1, AL_TELEPORT 2, AL_DEMONBANE 5, AL_WARP 2, AL_ANGELUS 10 
		]
	} elsif ($currentJob == Priest) {
		[
			do conf statsAddAuto 1
			do conf statsAddAuto_list 20 agi, 20 str, 20 dex, 10 int, 40 agi, 30 str, 40 dex, 30 vit, 30 int, 60 str, 80 agi
			do conf statsAddAuto_dontUseBonus 1
			do conf statsAdd_over_99 1
			
			do conf skillsAddAuto 1 
			do conf skillsAddAuto_list PR_MACEMASTERY 10, PR_IMPOSITIO 5, PR_KYRIE 10
		]
	} elsif ($currentJob == Monk) {
		[
			do conf statsAddAuto 1
			do conf statsAddAuto_list 20 agi, 20 str, 20 dex, 10 int, 40 agi, 30 str, 40 dex, 30 vit, 30 int, 60 str, 80 agi
			do conf statsAddAuto_dontUseBonus 1
			do conf statsAdd_over_99 1
			
			do conf skillsAddAuto 1 
			do conf skillsAddAuto_list none
		]
	} elsif ($currentJob == Rogue) {
		[
			do conf statsAddAuto 1
			do conf statsAddAuto_list 20 agi, 20 str, 20 dex, 40 agi, 30 str, 40 dex, 30 vit, 60 str, 80 agi, 20 luk
			do conf statsAddAuto_dontUseBonus 1
			do conf statsAdd_over_99 1
			
			do conf skillsAddAuto 1 
			do conf skillsAddAuto_list RG_SNATCHER 10
		]
	} else {
		do conf skillsAddAuto 0
		do conf skillsAddAuto_list none
	}
}

macro setReceiver1 {
	$receiver = none
	do conf rodexReceiver $receiver
}

macro setReceiver2 {
	$receiver = none
	do conf rodexReceiver $receiver
}

macro setTargets {
	switch ($.map) {
		case (== gef_fild11) {
			[
				do mconf Mace Goblin 1 0 1
				do mconf Axe Goblin 1 0 1
				do mconf Dagger Goblin 1 0 1
				do mconf Archer Goblin 1 0 1
			]
		}
		case (== mjolnir_10) {
			[
				do mconf Argiope 1 0 1
				do mconf Poring	0 0 0
			]
		}
		else {
			stop
		}
	}
}